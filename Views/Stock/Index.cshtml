@model Inz_Fn.Models.StockTickersViewModel




@{
    ViewData["Title"] = "Index";
}


<table class="table table-blue">
    <thead>
        <tr>
            <th scope="col">
                <a asp-action="Index" asp-route-sort="Symbol" asp-route-sortOrder="@(Model.sort?.ToString() == "Symbol" && Model.sortOrder?.ToString() == "asc" ? "desc" : "asc")">
                    Symbol
                </a>
            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sort="Cena" asp-route-sortOrder="@(Model.sort?.ToString() == "Cena" && Model.sortOrder?.ToString() == "asc" ? "desc" : "asc")">
                    Cena
                </a>

            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sort="Zmiana" asp-route-sortOrder="@(Model.sort?.ToString() == "Zmiana" && Model.sortOrder?.ToString() == "asc" ? "desc" : "asc")">
                    Zmiana dobowa(%)
                </a>
            </th>
            <th scope="col">

                <a asp-action="Index" asp-route-sort="Transakcje" asp-route-sortOrder="@(Model.sort?.ToString() == "Transakcje" && Model.sortOrder?.ToString() == "asc" ? "desc" : "asc")">
                    Liczba trasnsakcji
                </a>
            </th>
            <th scope="col">
                <form asp-action="Index" method="get">
                    <input type="text" name="searchString" />
                    <button type="submit" class="btn btn-primary" value="Szukaj">Szukaj</button>
                </form>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.StockTickers) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.T)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.c)
            </td>
            <td>
                    <span class="@(item.dailyChange > 0 ? "gain" : item.dailyChange < 0 ? "loss" : "")">
                        @(item.dailyChange > 0 ? "+" : "")@Math.Round(item.dailyChange, 2) %
                </span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.n)
            </td>
            <td>
                    <a asp-action="TickerDetails" asp-controller="Stock" asp-route-id="@item.T" class="btn btn-outline-primary" role="button">Zobacz</a>

                </td>
        </tr>
}
    </tbody>
</table>

<div>
    <a class="btn btn-primary @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")" href="@(Model.Pagination.CurrentPage > 1 ? Url.Action("Index", "Stock", new { currentPage = Model.Pagination.CurrentPage - 1, searchString = Model.searchStr, sort=Model.sort, sortOrder=Model.sortOrder }) : "#")" role="button">&lt;</a>

    @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
    {
        if (i == 1 || i == Model.Pagination.TotalPages || (i <= Model.Pagination.CurrentPage + 5 && i >= Model.Pagination.CurrentPage - 5))

        {
            if (i == Model.Pagination.CurrentPage)
            {
                <button type="button" class="btn btn-primary" disabled>@i</button>
            }
            else
            {
                <a class="btn btn-primary" href="@Url.Action("Index", "Stock", new { currentPage = i,searchString = Model.searchStr,sort=Model.sort, sortOrder=Model.sortOrder })" role="button">@i</a>
            }
        }
        
    }
    <a class="btn btn-primary @(Model.Pagination.CurrentPage == Model.Pagination.TotalPages ? "disabled" : "")" href="@(Model.Pagination.CurrentPage<Model.Pagination.TotalPages ? Url.Action("Index", "Stock", new { currentPage = Model.Pagination.CurrentPage + 1, searchString = Model.searchStr, sort=Model.sort, sortOrder=Model.sortOrder }) : "#")" role="button">></a>
</div>


