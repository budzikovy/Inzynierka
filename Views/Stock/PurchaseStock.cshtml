@model Inz_Fn.Models.StockBuyModel

<div class="tab">
    <a asp-action="Index" type="button" class="tablinks btn blue-button text-white">Powrót</a>
</div>

<div id="Hour" class="tabcontent border-blue my-3">
    <div id="stockChartContainer" style="width: 100%; height: 100%;"></div>
</div>

<div id="Minute" class="tabcontent border-blue my-3">
    <div id="stockChartContainer2" style="width: 100%; height: 100%;"></div>
</div>

<div class="tab mb-3">
    <button class="tablinks btn blue-button text-white mx-2" onclick="changeView(event, 'Hour')" id="defaultOpen">Godziny</button>
    <button class="tablinks btn blue-button text-white" onclick="changeView(event, 'Minute')">Minuty</button>
    <button class="tablinks btn blue-button text-white mx-2" id="toggleChartType" type="button">Typ wykresu</button>
</div>

<form asp-action="SaveStock" method="post">
    <div class="d-flex justify-content-center flex-column align-items-center mb-5">
        <div class="d-flex flex-column" style="max-width: 320px">
            <div class="d-flex my-2">
                <label class="me-1 fw-bold d-flex align-items-center" for="Stock_CIK">Symbol: </label>
                <input type="text" class="form-control" id="Stock_CIK" name="Stock_CIK" value="@Model.Stock_CIK" required readonly>
            </div>
            <div class="d-flex">
                <label class="me-1 fw-bold d-flex align-items-center nowrap" for="Price_per_stock">Cena akcji: </label>
                <input type="text" class="form-control" id="Price_per_stock" name="Price_per_stock" value="@Model.Price_per_stock" required readonly>
            </div>
            <div class="form-group">
                <label for="Amount" class="my-2">Ile akcji kupujesz?</label>
                <input type="number" class="form-control" id="Amount" name="Amount" required>
            </div>
            <button type="submit" class="btn btn-primary w-100 mt-2">Kup akcje</button>
        </div>
    </div>
</form>


<script type="text/javascript">
    $(function () {
        var data = @Html.Raw(Json.Serialize(Model.stockModels));
        var ohlc = [], volume = [];

        for (var i = 0; i < data.length; i++) {
            ohlc.push([
                data[i].t,
                data[i].o,
                data[i].h,
                data[i].l,
                data[i].c
            ]);

            volume.push([
                data[i].t,
                data[i].v
            ]);
        }

        var chart = Highcharts.stockChart('stockChartContainer', {

            chart: {
                height: (9 / 16 * 90) + '%'
            },

            rangeSelector: {
                selected: 1
            },


            plotOptions: {
                candlestick: {
                    color: '#FF0000',
                    upColor: '#00FF00'
                }
            },

            title: {
                text: 'Hour stock prices'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '80%',
                lineWidth: 2
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '80%',
                height: '20%',
                offset: 0,
                lineWidth: 2
            }],

            series: [{
                type: 'candlestick',
                name: 'Stock Price',
                data: ohlc
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1
            }]
        });

        function toggleChartType(series) {
            series.update({
                type: series.type === 'candlestick' ? 'line' : 'candlestick'
            });
        }

        $('#toggleChartType').click(function () {
            toggleChartType(chart.series[0]);
        });

    });
    
    $(function () {
        var data = @Html.Raw(Json.Serialize(Model.stockModels2));
        var ohlc = [], volume = [];

        for (var i = 0; i < data.length; i++) {
            ohlc.push([
                data[i].t,
                data[i].o,
                data[i].h,
                data[i].l,
                data[i].c
            ]);

            volume.push([
                data[i].t,
                data[i].v
            ]);
        }

        var chart = Highcharts.stockChart('stockChartContainer2', {

            chart: {
                height: (9 / 16 * 90) + '%' // 16:9 ratio
            },

            rangeSelector: {
                buttons: [{
                    type: 'minute',
                    count: 15,
                    text: '15m'
                }, {
                    type: 'minute',
                    count: 30,
                    text: '30m'
                }, {
                    type: 'hour',
                    count: 1,
                    text: '1h'
                }, {
                    type: 'hour',
                    count: 3,
                    text: '3h'
                }, {
                    type: 'day',
                    count: 1,
                    text: '1d'
                }, {
                    type: 'all',
                    text: 'All'
                }]
            },

            plotOptions: {
                candlestick: {
                    color: '#FF0000',
                    upColor: '#00FF00'
                }
            },

            title: {
                text: 'Minute stock prices'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '60%',
                lineWidth: 2
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '65%',
                height: '35%',
                offset: 0,
                lineWidth: 2
            }],

            series: [{
                type: 'candlestick',
                name: 'Stock Price',
                data: ohlc
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1
            }]
        });
        function toggleChartType(series) {
            series.update({
                type: series.type === 'candlestick' ? 'line' : 'candlestick'
            });
        }

        $('#toggleChartType').click(function () {
            toggleChartType(chart.series[0]);
        });

    });

    function changeView(evt, action) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(action).style.display = "block";
        evt.currentTarget.className += " active";
    }

    document.getElementById("defaultOpen").click();

</script>