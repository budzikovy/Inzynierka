@model Inz_Fn.Models.StockTickersViewModel




@{
    ViewData["Title"] = "Index";
}

<h1>View</h1>

<form asp-action="Index" method="get">
    <input type="text" name="searchString" />
    <input type="submit" value="Szukaj" />
</form>

<table class="table table-bordered table-primary">
    <thead>
        <tr>
            <th scope="col">
                Symbol
            </th>
            <th scope="col">
                Cena

            </th>
            <th scope="col">
                Zmiana dobowa(%)

            </th>
            <th scope="col">
                Liczba trasnsakcji
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.StockTickers) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.T)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.c)
            </td>
            <td>
                    <span>@((item.c - item.o) / item.o*100) %</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.n)
            </td>

                <td>
                    <a href="@Url.Action("TickerDetails", "Stock", new { id = item.T })">@Html.DisplayFor(modelItem => item.T)</a>

                </td>

        </tr>
}
    </tbody>
</table>
<div>
    @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
    {
        if (i == 1 || i == Model.Pagination.TotalPages || (i <= Model.Pagination.CurrentPage + 5 && i >= Model.Pagination.CurrentPage - 5))

        {
            if (i == Model.Pagination.CurrentPage)
            {
                <span>@i</span>
            }
            else
            {
                <a href="@Url.Action("Index", "Stock", new { currentPage = i,searchString = Model.searchStr  })">@i</a>
            }
        }
        
    }
</div>


