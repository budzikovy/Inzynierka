@model IEnumerable<Inz_Fn.Models.StockTickers>

@{
    ViewData["Title"] = "Index";
}

<h1>View</h1>

<table class="table">
    <thead>
        <tr>
            <th>
<<<<<<< Updated upstream
                @Html.DisplayNameFor(model => model.T)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.c)
=======
                Ticker
            </th>
            <th>
                Close Price
>>>>>>> Stashed changes
            </th>
            <th>
                @Html.DisplayNameFor(model => model.h)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.l)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.n)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.o)
            </th>
<<<<<<< Updated upstream
            <th>
                @Html.DisplayNameFor(model => model.otc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.t)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.v)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.vw)
            </th>
=======
>>>>>>> Stashed changes
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    <a href="@Url.Action("TickerDetails", "Stock", new { id = item.T })">@Html.DisplayFor(modelItem => item.T)</a>
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.c)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.h)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.l)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.n)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.o)
            </td>
        </tr>
}
    </tbody>
</table>
<<<<<<< Updated upstream
=======
<div>
    @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
    {
        if (i == 1 || i == Model.Pagination.TotalPages || (i <= Model.Pagination.CurrentPage + 5 && i >= Model.Pagination.CurrentPage - 5))
        {
            if (i == Model.Pagination.CurrentPage)
            {
                <span>@i</span>
            }
            else
            {
                <a href="@Url.Action("Index", "Stock", new { currentPage = i })">@i</a>
            }
        }
        
    }
</div>
>>>>>>> Stashed changes
