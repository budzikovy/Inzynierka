@model Inz_Fn.Models.StockBuyModel

<form asp-action="SaveStock" method="post">
    <div class="form-group">
        <label for="Stock_CIK">Stock ID</label>
        <input type="text" class="form-control" id="Stock_CIK" name="Stock_CIK" value="@Model.Stock_CIK" required readonly>
    </div>
    <div class="form-group">
        <label for="Price_per_stock">Price per Stock</label>
        <input type="text" class="form-control" id="Price_per_stock" name="Price_per_stock" value="@Model.Price_per_stock" required readonly>
        <input type="text" class="form-control" id="Currency" name="Currency" value="@Model.Currency" required hidden>

    </div>
    <div class="form-group">
        <label for="Amount">Amount</label>
        <input type="number" class="form-control" id="Amount" name="Amount" required>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>
<div class="tab">
    <button class="tablinks" onclick="changeView(event, 'Hour')" id="defaultOpen">Hour</button>
    <button class="tablinks" onclick="changeView(event, 'Minute')">Minute</button>
</div>
<div id="Hour" class="tabcontent">
    <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
    <button id="toggleChartType" type="button">Toggle Chart Type</button>

    <div id="stockChartContainer" style="height: 400px; min-width: 310px"></div>

</div>

<div id="Minute" class="tabcontent">
    <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
    <button id="toggleChartType2" type="button">Toggle Chart Type</button>

    <div id="stockChartContainer2" style="height: 400px; min-width: 310px"></div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script type="text/javascript">
    $(function () {
        var data = @Html.Raw(Json.Serialize(Model.stockModels));
        var ohlc = [], volume = [];

        for (var i = 0; i < data.length; i++) {
            ohlc.push([
                data[i].t,
                data[i].o,
                data[i].h,
                data[i].l,
                data[i].c
            ]);

            volume.push([
                data[i].t,
                data[i].v
            ]);
        }

        var chart = Highcharts.stockChart('stockChartContainer', {
            rangeSelector: {
                selected: 1
            },

            title: {
                text: 'Hour stock prices'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '60%',
                lineWidth: 2
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '65%',
                height: '35%',
                offset: 0,
                lineWidth: 2
            }],

            series: [{
                type: 'candlestick',
                name: 'Stock Price',
                data: ohlc
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1
            }]
        });

        $('#toggleChartType').click(function () {
            var series = chart.series[0];
            if (series.type === 'candlestick') {
                series.update({
                    type: 'line'
                });
            } else {
                series.update({
                    type: 'candlestick'
                });
            }
        });
    }); $(function () {
        var data = @Html.Raw(Json.Serialize(Model.stockModels2));
        var ohlc = [], volume = [];

        for (var i = 0; i < data.length; i++) {
            ohlc.push([
                data[i].t,
                data[i].o,
                data[i].h,
                data[i].l,
                data[i].c
            ]);

            volume.push([
                data[i].t,
                data[i].v
            ]);
        }

        var chart = Highcharts.stockChart('stockChartContainer2', {
            rangeSelector: {
                buttons: [{
                    type: 'minute',
                    count: 15,
                    text: '15m'
                }, {
                    type: 'minute',
                    count: 30,
                    text: '30m'
                }, {
                    type: 'hour',
                    count: 1,
                    text: '1h'
                }, {
                    type: 'hour',
                    count: 3,
                    text: '3h'
                }, {
                    type: 'day',
                    count: 1,
                    text: '1d'
                }, {
                    type: 'all',
                    text: 'All'
                }]
            },

            title: {
                text: 'Minute stock prices'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '60%',
                lineWidth: 2
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '65%',
                height: '35%',
                offset: 0,
                lineWidth: 2
            }],

            series: [{
                type: 'candlestick',
                name: 'Stock Price',
                data: ohlc
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1
            }]
        });

        $('#toggleChartType2').click(function () {
            var series = chart.series[0];
            if (series.type === 'candlestick') {
                series.update({
                    type: 'line'
                });
            } else {
                series.update({
                    type: 'candlestick'
                });
            }
        });
    });
    function changeView(evt, action) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(action).style.display = "block";
        evt.currentTarget.className += " active";
    }

    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
</script>