@model IEnumerable<Inz_Fn.Models.Stock_model>

@{
    ViewData["Title"] = "Stocks";
}

<h1>Stock</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<button id="toggleChartType" type="button">Toggle Chart Type</button>

<div id="stockChartContainer" style="height: 400px; min-width: 310px"></div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.c)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.h)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.l)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.n)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.o)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.otc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.t)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.v)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.vw)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.c)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.h)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.l)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.n)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.o)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.otc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.t)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.v)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.vw)
            </td>
        </tr>
}
    </tbody>
</table>


<script type="text/javascript">
    $(function () {
        var data = @Html.Raw(Json.Serialize(Model));
        var ohlc = [], volume = [];

        for (var i = 0; i < data.length; i++) {
            ohlc.push([
                data[i].t,
                data[i].o,
                data[i].h,
                data[i].l,
                data[i].c
            ]);

            volume.push([
                data[i].t,
                data[i].v
            ]);
        }

        var chart = Highcharts.stockChart('stockChartContainer', {
            rangeSelector: {
                selected: 1
            },

            title: {
                text: 'Stock Price'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '60%',
                lineWidth: 2
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '65%',
                height: '35%',
                offset: 0,
                lineWidth: 2
            }],

            series: [{
                type: 'candlestick',
                name: 'Stock Price',
                data: ohlc
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1
            }]
        });

        $('#toggleChartType').click(function () {
            var series = chart.series[0];
            if (series.type === 'candlestick') {
                series.update({
                    type: 'line'
                });
            } else {
                series.update({
                    type: 'candlestick'
                });
            }
        });
    });
</script>